<?xml version="1.0" encoding="UTF-8"?>
<model version="6.1.1" links="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.state-machine.com/qm/qm.xsd">
 <documentation>Blinky example</documentation>
 <!--${qpc}-->
 <framework name="qpc"/>
 <!--${AOs}-->
 <package name="AOs" stereotype="0x02">
  <!--${AOs::uart}-->
  <class name="uart" superclass="qpc::QActive">
   <!--${AOs::uart::timeEvt}-->
   <attribute name="timeEvt" type="QTimeEvt" visibility="0x02" properties="0x00"/>
   <!--${AOs::uart::SM}-->
   <statechart properties="0x02">
    <!--${AOs::uart::SM::initial}-->
    <initial target="../1">
     <action>uartInitial(me,par);</action>
     <initial_glyph conn="9,2,5,0,14,3">
      <action box="0,-2,12,5"/>
     </initial_glyph>
    </initial>
    <!--${AOs::uart::SM::idle}-->
    <state name="idle">
     <!--${AOs::uart::SM::idle::TOUT}-->
     <tran trig="TOUT">
      <action>uartPoolRx(me,e);</action>
      <tran_glyph conn="17,14,3,-1,16">
       <action box="0,-2,15,6"/>
      </tran_glyph>
     </tran>
     <!--${AOs::uart::SM::idle::PRINT}-->
     <tran trig="PRINT">
      <action>uartPrint(me,e);</action>
      <tran_glyph conn="17,22,3,-1,19">
       <action box="0,-2,19,6"/>
      </tran_glyph>
     </tran>
     <!--${AOs::uart::SM::idle::KEY}-->
     <tran trig="KEY">
      <action>uartEcho(me,e);</action>
      <!--${AOs::uart::SM::idle::KEY::[uartGetKey(me,e)=='1']}-->
      <choice>
       <guard>uartGetKey(me,e)=='1'</guard>
       <action>uartPrint1(me,e);</action>
       <choice_glyph conn="31,28,4,-1,2,12">
        <action box="2,0,19,6"/>
       </choice_glyph>
      </choice>
      <!--${AOs::uart::SM::idle::KEY::[uartGetKey(me,e)=='2']}-->
      <choice>
       <guard>uartGetKey(me,e)=='2'</guard>
       <action>uartPrint2(me,e);</action>
       <choice_glyph conn="31,28,4,-1,9,12">
        <action box="1,7,20,5"/>
       </choice_glyph>
      </choice>
      <!--${AOs::uart::SM::idle::KEY::[uartGetKey(me,e)=='3']}-->
      <choice>
       <guard>uartGetKey(me,e)=='3'</guard>
       <action>uartPrint3(me,e);</action>
       <choice_glyph conn="31,28,4,-1,16,12">
        <action box="1,14,20,5"/>
       </choice_glyph>
      </choice>
      <!--${AOs::uart::SM::idle::KEY::[uartGetKey(me,e)=='4']}-->
      <choice>
       <guard>uartGetKey(me,e)=='4'</guard>
       <action>uartPrint4(me,e);</action>
       <choice_glyph conn="31,28,4,-1,22,12">
        <action box="1,20,20,5"/>
       </choice_glyph>
      </choice>
      <tran_glyph conn="17,28,3,-1,14">
       <action box="0,-2,16,5"/>
      </tran_glyph>
     </tran>
     <state_glyph node="17,5,39,48"/>
    </state>
    <state_diagram size="95,55"/>
   </statechart>
  </class>
 </package>
 <!--${.}-->
 <directory name=".">
  <!--${.::uart_sm.c}-->
  <file name="uart_sm.c">
   <text>#include &quot;all.h&quot;

$define ${AOs::uart}</text>
  </file>
  <!--${.::uart_sm.h}-->
  <file name="uart_sm.h">
   <text>#ifndef UART_SM
#define UART_SM

$declare ${AOs::uart}

#endif</text>
  </file>
 </directory>
</model>
